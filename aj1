

Spring Framework Problem Statement_3
Spring Bean Scopes in IoC Container
pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"> 
 <modelVersion>4.0.0</modelVersion> 
 <groupId>com.springframework</groupId> 
 <artifactId>Spring_ShoppingCart_PracticeExercise</artifactId> 
 <version>0.0.1-SNAPSHOT</version> 
 <name>Spring_ShoppingCart_PracticeExercise</name> 
  
 <properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
<maven.compiler.source>1.11</maven.compiler.source>
<maven.compiler.target>1.11</maven.compiler.target>
<spring.version>5.1.0.RELEASE</spring.version>
<log4j.version>2.11.1</log4j.version>
<junit.version>5.3.1</junit.version> 
 </properties> 
  
 <dependencies>
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-core</artifactId>
<version>${spring.version}</version>
</dependency>
 
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-context</artifactId>
<version>${spring.version}</version>
</dependency> 
 
 </dependencies> 
 
</project> 
 
 
 
 
 
 
Product.java
package com.di.constructorMethod;
 
public class Product {
 
private int productId;
private String productName;
private double productPrice;
 
public Product(int productId, String productName, double productPrice) {
super();
this.productId = productId;
this.productName = productName;
this.productPrice = productPrice;
}
 
@Override
public String toString() {
return "Product [productId=" + productId + ", productName=" + productName + ", productPrice=" + productPrice
+ "]";
}
 
}
 
Battery.java
package com.di.constructorMethod;
 
public class Battery extends Product {
 
private boolean rechargeable;
 
public Battery(int productId, String productName, double productPrice, boolean rechargeable) {
super(productId, productName, productPrice);
this.rechargeable = rechargeable;
}
 
@Override
public String toString() {
return "Battery ["+ super.toString() + " rechargeable=" + rechargeable + "]";
}
 
}
Disc.java
package com.di.constructorMethod;
 
public class Disc extends Product {
 
private int capacity;
 
public Disc(int productId, String productName, double productPrice, int capacity) {
super(productId, productName, productPrice);
this.capacity = capacity;
}
 
@Override
public String toString() {
return "Disc [" + super.toString() +" capacity=" + capacity + "MB" + "]";
}
 
 
 
} 
 
ShoppingCart.java
package com.scopes.iocContainer;
 
import java.util.ArrayList;
import java.util.List;
 
import com.di.constructorMethod.Product;
 
public class ShoppingCart {
 
private List<Product> items = new ArrayList<>();
 
public void addItem(Product item) {
items.add(item);
}
 
public List<Product> getItems(){
return items;
}
 
@Override
public String toString() {
return "ShoppingCart [items=" + items + "]";
}
 
}
 
 
applicationContext.xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:schemaLocation="http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans.xsd"> 
           
      <bean id="battery" class="com.di.constructorMethod.Battery"> 
                              <constructor-arg name="productId" value="101"></constructor-arg> 
                              <constructor-arg name="productName" value="Nippo Battery"></constructor-arg> 
                              <constructor-arg name="productPrice" value="15.50"></constructor-arg> 
                              <constructor-arg name="rechargeable" value="true"></constructor-arg> 
      </bean> 
       
      <bean id="disc" class="com.di.constructorMethod.Disc"> 
                              <constructor-arg name="productId" value="201"></constructor-arg> 
                              <constructor-arg name="productName" value="Hard Disk"></constructor-arg> 
                              <constructor-arg name="productPrice" value="30"></constructor-arg> 
                              <constructor-arg name="capacity" value="512"></constructor-arg> 
      </bean> 
       
      <bean id="shoppingCart" class="com.scopes.iocContainer.ShoppingCart" scope="prototype"> 
      </bean> 
          
</beans>
 
 
 
 
 
App.java
package com.scopes.iocContainer;
 
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
 
import com.di.constructorMethod.Product;
 
public class App {
 
public static void main(String[] args) {
// TODO Auto-generated method stub
 
ApplicationContext ac = new ClassPathXmlApplicationContext("applicationContext.xml");
Product battery = (Product) ac.getBean("battery");
Product disc = (Product) ac.getBean("disc");
 
ShoppingCart cart1 = (ShoppingCart) ac.getBean("shoppingCart");
cart1.addItem(battery);
cart1.addItem(disc);
 
ShoppingCart cart2 = (ShoppingCart) ac.getBean("shoppingCart");
cart2.addItem(disc);
 
System.out.println("First cart: " + cart1);
System.out.println("Second cart: " + cart2);
 
((AbstractApplicationContext) ac).close();
 
}
 
} 
 
 
 
 
day3 by Kotu VasudevKotu Vasudev9:24 AM
day3
     Spring Framework Problem Statement_4 Pr... by Kotu VasudevKotu Vasudev9:24 AM
 
 
Spring Framework Problem Statement_4
Properties Files
Pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion> 
 <groupId>com.springframework</groupId> 
 <artifactId>Spring_ShoppingCart_PracticeExercise</artifactId> 
 <version>0.0.1-SNAPSHOT</version> 
 <name>Spring_ShoppingCart_PracticeExercise</name> 
  
 <properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
<maven.compiler.source>1.11</maven.compiler.source>
<maven.compiler.target>1.11</maven.compiler.target>
<spring.version>5.1.0.RELEASE</spring.version>
<log4j.version>2.11.1</log4j.version>
<junit.version>5.3.1</junit.version> 
 </properties> 
  
 <dependencies>
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-core</artifactId>
<version>${spring.version}</version>
</dependency>
 
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-context</artifactId>
<version>${spring.version}</version>
</dependency> 
 
 </dependencies> 
 
</project>
 
 
Product.java
package com.di.constructorMethod;
 
public class Product {
 
private int productId;
private String productName;
private double productPrice;
private double productDiscount;
 
public Product(int productId, String productName, double productPrice) {
super();
this.productId = productId;
this.productName = productName;
this.productPrice = productPrice;
}
 
public double getProductDiscount() {
return productDiscount;
}
 
public void setProductDiscount(double productDiscount) {
this.productDiscount = productDiscount;
}
 
@Override
public String toString() {
return "Product [productId=" + productId + ", productName=" + productName + ", productPrice=" + productPrice
+ ", productDiscount=" + productDiscount + "]";
}
 
}
 
Battery.java
package com.di.constructorMethod;
 
public class Battery extends Product {
 
private boolean rechargeable;
private double productDiscount;
 
public Battery(int productId, String productName, double productPrice, boolean rechargeable) {
super(productId, productName, productPrice);
this.rechargeable = rechargeable;
}
 
public double getProductDiscount() {
return productDiscount;
}
 
public void setProductDiscount(double productDiscount) {
this.productDiscount = productDiscount;
}
 
@Override
public String toString() {
return "Battery ["+ super.toString() + "productDiscount=" + productDiscount + " rechargeable=" + rechargeable + "]";
}
 
}
 
Disc.java
package com.di.constructorMethod;
 
public class Disc extends Product {
 
private int capacity;
private double productDiscount;
 
public Disc(int productId, String productName, double productPrice, int capacity) {
super(productId, productName, productPrice);
this.capacity = capacity;
}
 
public double getProductDiscount() {
return productDiscount;
}
 
public void setProductDiscount(double productDiscount) {
this.productDiscount = productDiscount;
}
 
@Override
public String toString() {
return "Disc [" + super.toString() + "productDiscount=" + productDiscount + " capacity=" + capacity + "MB" + "]";
}
 
 
 
} 
 
ShoppingCart.java
package com.scopes.iocContainer;
 
import java.util.ArrayList;
import java.util.List;
 
import com.di.constructorMethod.Product;
 
public class ShoppingCart {
 
private List<Product> items = new ArrayList<>();
 
public void addItem(Product item) {
items.add(item);
}
 
public List<Product> getItems(){
return items;
}
 
@Override
public String toString() {
return "ShoppingCart [items=" + items + "]";
}
 
}
 
discounts.properties
specialcustomer.discount=0.1
summer.discount=0.15
endofyear.discount=0.2
 
applicationContext.xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xmlns:util="http://www.springframework.org/schema/util" 
      xmlns:p="http://www.springframework.org/schema/p" 
      xsi:schemaLocation="http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans.xsd 
          http://www.springframework.org/schema/util 
          http://www.springframework.org/schema/util/spring-util.xsd"> 
       
      <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
                               <property name="location" value="discounts.properties" />
</bean> 
       
      <bean id="battery" class="com.di.constructorMethod.Battery"> 
                              <constructor-arg name="productId" value="101"></constructor-arg> 
                              <constructor-arg name="productName" value="Nippo Battery"></constructor-arg> 
                              <constructor-arg name="productPrice" value="15.50"></constructor-arg> 
                              <constructor-arg name="rechargeable" value="true"></constructor-arg> 
                              <property name="productDiscount" value="${specialcustomer.discount}"></property> 
      </bean> 
       
      <bean id="disc" class="com.di.constructorMethod.Disc"> 
                              <constructor-arg name="productId" value="201"></constructor-arg> 
                              <constructor-arg name="productName" value="Hard Disk"></constructor-arg> 
                              <constructor-arg name="productPrice" value="30"></constructor-arg> 
                              <constructor-arg name="capacity" value="512"></constructor-arg> 
                              <property name="productDiscount" value="${summer.discount}"></property> 
      </bean> 
       
      <bean id="shoppingCart" class="com.scopes.iocContainer.ShoppingCart" scope="prototype"> 
      </bean> 
          
</beans>
 
App.java
package com.scopes.iocContainer;
 
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
 
import com.di.constructorMethod.Product;
 
public class App {
 
public static void main(String[] args) {
// TODO Auto-generated method stub
 
ApplicationContext ac = new ClassPathXmlApplicationContext("applicationContext.xml");
Product battery = (Product) ac.getBean("battery");
Product disc = (Product) ac.getBean("disc");
 
ShoppingCart cart1 = (ShoppingCart) ac.getBean("shoppingCart");
cart1.addItem(battery);
cart1.addItem(disc);
 
ShoppingCart cart2 = (ShoppingCart) ac.getBean("shoppingCart");
cart2.addItem(disc);
 
System.out.println("First cart: " + cart1);
System.out.println("Second cart: " + cart2);
 
((AbstractApplicationContext) ac).close();
 
}
 
} 









==========================================================================================================





















CREATE TABLE PassengerDetails (
    Passenger_id INT AUTO_INCREMENT PRIMARY KEY,
    Passenger_name VARCHAR(50) NOT NULL,
    Passenger_dob DATE NOT NULL,
    Passenger_phone VARCHAR(50) NOT NULL UNIQUE,
    Passenger_email VARCHAR(50) NOT NULL UNIQUE
);

create database Passenger;
use Passenger;


INSERT INTO PassengerDetails (Passenger_name, Passenger_dob, Passenger_phone, Passenger_email) VALUES
('John Doe', '1985-07-15', '123-456-7890', 'john.doe@example.com'),
('Jane Smith', '1990-11-23', '987-654-3210', 'jane.smith@example.com'),
('Alice Johnson', '1982-03-29', '555-123-4567', 'alice.johnson@example.com'),
('Bob Brown', '1978-12-05', '555-765-4321', 'bob.brown@example.com');


select * from PassengerDetails;


drop table PassengerDetails;
------------------------------------------------------------------------------------------------------------------
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ page import="java.util.List"%>
<%@ page import="minithree.PatientVitals"%>
<%@ page import="minithree.PatientsDao"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<%
    PatientsDao dao = new PatientsDao();
    List<PatientVitals> vitalsList = dao.patientVitals();
%>
<!DOCTYPE html>
<html>
<head>
<title>Display Vitals</title>
<style>
/* CSS Code */
table {
    width: 95.5%;
    border-collapse: collapse;
    margin: 50px 0;
    font-size: 18px;
    text-align: left;
    margin: 0 auto;
}

th, td {
    padding: 12px;
    width: auto;
    height: auto;
    border-bottom: 1px solid #ddd;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}

th {
    background-color: #f2f2f2;
}

.firstnav, .secondnav {
    height: 70px;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.buttons {
    height: 70px;
    width: 45%;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}

h2, h3 {
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    margin-left: 30px;
    color: red;
}

.firstnav>a {
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    background-color: rgb(218, 218, 218);
    padding: 5px 10px;
    text-decoration: none;
    color: rgb(0, 0, 0);
    font-weight: bolder;
    border-radius: 10px;
    margin-right: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.buttons>a {
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    background-color: rgb(218, 218, 218);
    padding: 5px 10px;
    text-decoration: none;
    color: rgb(0, 0, 0);
    font-weight: bolder;
    border-radius: 10px;
    margin-right: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}

tr>.action>a {
    height: 20px;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    background-color: rgb(218, 218, 218);
    padding: 3px 0px;
    text-decoration: none;
    font-weight: bolder;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}
</style>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var dataArray = [['Timestamp', 'BP Low', 'BP High', 'SPO2']];

        <% 
            // Use a for loop to populate the data array in JSP
            for (PatientVitals p : vitalsList) {
        %>
        dataArray.push(['<%= p.getTimestamp() %>', <%= p.getBpLow() %>, <%= p.getBpHigh() %>, <%= p.getSpo2() %>]);
        <% } %>

        var data = google.visualization.arrayToDataTable(dataArray);

        var options = {
            title: 'Patient Vitals Over Time',
            hAxis: {title: 'Recorded On', titleTextStyle: {color: '#333'}},
            vAxis: {title: 'Values', minValue: 0},
            curveType: 'function',
            legend: { position: 'bottom' },
            isStacked: true // Stacked Area Chart
        };

        var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>
</head>
<body>
    <div class="firstnav">
        <h2>DOCTOR HOME PAGE</h2>
        <a href="Login.jsp">LOGOUT</a>
    </div>

    <div class="secondnav">
        <h3>Vitals</h3>
        <div class="buttons">
            <a href="DoctorHome.jsp">Manage Patients</a>
            <a href="">Export</a>
            <a href="VitalsAdd.jsp">Record New Vital</a>
            <a href="VitalsAlert.jsp">Vital Alerts</a>
        </div>
    </div>

    <!-- Area Chart Div -->
    <div id="chart_div" style="width: 100%; height: 500px;"></div>

    <!-- Table of Vitals -->
    <table>
        <thead>
            <tr>
                <th>Sr No</th>
                <th>Name</th>
                <th>Phone</th>
                <th>BP Low</th>
                <th>BP High</th>
                <th>SPO2</th>
                <th>Recorded On</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <% for (PatientVitals p : vitalsList) { %>
            <tr>
                <td><%= p.getId() %></td>
                <td><%= p.getName() %></td>
                <td><%= p.getPhoneNumber() %></td>
                <td><%= p.getBpLow() %></td>
                <td><%= p.getBpHigh() %></td>
                <td><%= p.getSpo2() %></td>
                <td><%= p.getTimestamp() %></td>
                <td class="action">
                    <a href="DeletePatientVitals?id=<%= p.getId() %>" style="background-color: red; color: white">Delete</a>
                </td>
            </tr>
            <% } %>
        </tbody>
    </table>
</body>
</html>










--------------------------------------------------------------------------------------



public class BusinessException extends Exception {
    public BusinessException(String string) {
        super(string);
    }
}

public class LoginBo {
	LoginDao dao=new LoginDao();
	boolean isValidData(String name, String password) throws BusinessException{
		if(name==null || password==null || name.equals("") || password.equals("")){
			 new BusinessException("Invalid");
		}
		return dao.isValidData(name, password);
	}

	
	
}
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
public class LoginDao {
	PreparedStatement pt = null;
	Connection con = null;

	boolean isValidData(String name, String password) {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/user", "root", "J2EE@java");
			pt = con.prepareStatement("SELECT * FROM user WHERE name = ? AND password = ?");
			pt.setString(1, name);
			pt.setString(2, password);
			ResultSet set = pt.executeQuery();
			if (set.next() == false)
				throw new BusinessException("InvalidEntry");
			return true;
		} catch (SQLException | ClassNotFoundException | BusinessException e) {
			e.printStackTrace();
		}
		return false;
	}
}
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/LoginServlet")
public class LoginServlet  extends HttpServlet{
    LoginBo login=new LoginBo();
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		String name=req.getParameter("name");
		String password=req.getParameter("password");
		System.out.println(name+"  "+password);
		try {
			if(login.isValidData(name, password)) 
				res.sendRedirect("welcome.html");
			else
				res.sendRedirect("login.html");
		} catch (BusinessException e) {
			e.printStackTrace();
		}
		
		
	}
	
	
	
	
}
public class User {
    private String username;
    private String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    // Getters and Setters
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
    
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        *{
margin: 0;
padding: 0;
box-sizing: border-box;
}
        #out{
        height: 100vh;
        width: 100%;
        /* border: 2px solid red; */
        background-color: rgba(49, 50, 50, 0.183);
     }
     h1{
        font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        color: rgb(90, 4, 17);
        font-size: 40px;
        /* margin-top: 58px; */
        /* padding-bottom: 15px; */
        padding-top: 58px;
     }
     #login{
        height: 300px;
        width: 500px;
        /* border: 2px solid red; */
        margin:50px auto;
        background-color: #04424244;
     }
     
     h2{
        font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        color: blue;
        font-size: 28px;
        padding-top: 15px;
        padding-bottom: 15px;
     }
     form {
            max-width: 300px;
            margin: auto;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;

        }
        input{
            border: none;
            border-radius: 4px;

        }
        
        input[type="text"], input[type="password"] {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            margin-top: 10px;
            padding: 8px 50px;
            background-color: #346dc2;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
           font-size:large;
        }
        input[type="submit"]:hover {
            background-color: #d80000;
        }
        .error-message {
            color: red;
        }
    </style>
</head>
<body>
   
    <div id="out">
        <center>   
            <h1>PLEASE ENTER LOGIN DETAILS</h1>
       </center> 
   <div id="login">
<center>   
     <h2>LOGIN PAGE</h2>
</center>    
    <form action="LoginServlet" method="post">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" name="name" required />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required />
        </div>
        <center>   
            <input type="submit" value="LOGIN" />
        </center>  
    </form>
   </div>
</div>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
<title>Welcome</title>
<link rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
<style>
#main {
	height: 70vh;
	width: 190vh;
	border: 2px solid green;
	margin: 60px auto;
}
h1 {
	font-size: 50px;
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: blue;
	margin-top: 40px;
}
h3 {
	font-size: 30px;
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	color: rgb(255, 0, 93);
	padding-top: 10px;
	margin-bottom: 40px;
}
a {
	padding: 10px 40px;
	background-color: rgb(35, 29, 29);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: 20px;
	font-weight: bolder;
	text-decoration: none;
	border: 2px solid black;
	border-radius: 4px;
	color: aliceblue;
}
a:hover {
	padding: 10px 40px;
	background-color: rgba(111, 110, 110, 0.166);
	font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
	font-size: 20px;
	font-weight: bolder;
	text-decoration: none;
	border: 2px solid black;
	border-radius: 4px;
	color: black;
}
#icons {
	height: 10vh;
	width: 100vh;
	/* border: 2px solid rgb(26, 35, 26); */
	display: flex;
	justify-content: space-evenly;
	align-items: center;
	margin-bottom: 40px;
}
</style>
</head>
<body>
	<center>
		<div id="main">
			<h1>WELCOME! YOUR JOURNEY STARTS HERE</h1>
			<div id="icons">
				<i class="fa fa-star" aria-hidden="true"
					style="color: gold; font-size: 40px;"></i> <i class="fa fa-star"
					aria-hidden="true" style="color: gold; font-size: 40px;"></i> <i
					class="fa fa-star" aria-hidden="true"
					style="color: gold; font-size: 40px;"></i> <i class="fa fa-star"
					aria-hidden="true" style="color: gold; font-size: 40px;"></i> <i
					class="fa fa-star" aria-hidden="true"
					style="color: gold; font-size: 40px;"></i>
			</div>
			<h3>YOU WANT TO LOGOUT CLICK BELOW</h3>
			<a href="LogoffServlet">LOGOFF</a>
		</div>
	</center>
</body>
</html>
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet("/LogoffServlet")
public class LogoffServlet extends HttpServlet {
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		HttpSession session = req.getSession();
		if (session != null)
			session.invalidate();
		res.sendRedirect("login.html");
	}
}


------------------------------------------------------------------------------------------
Login

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Document</title>


    <style>
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


#health{
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.logger{
    height: 200px;
    width: 350px;
    border: 3px solid red;
    border-radius: 10px;
    
}
h1{
margin: 15px 0;
font-weight: 100px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
h4{
    color: rgb(93, 93, 93);
margin-bottom: 60px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 15px 20px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
}
a:hover{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(24, 24, 24);
padding: 15px 20px;
text-decoration: none;
color: rgb(255, 255, 255);
font-weight: bolder;
border-radius: 10px;
}





    </style>
</head>
<body>
    <div id="health">

        <div class="logger">
            <center>
     <h1>Health Logger</h1>
     <h4>Developed by Sreekanth Reddy</h4>
     <a href="www">DOCTOR LOGIN</a>
            </center>
         </div>
    </div>
</body>
</html>

Login2

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Document</title>
    <style>
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
#health{
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}
.logger{
    height: 300px;
    width: 350px;
    border: 3px solid red;
    border-radius: 10px;
}
h1{
margin: 15px 0;
font-weight: 100px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
h4{
    color: rgb(93, 93, 93);
margin-bottom: 60px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 15px 20px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
height: 50px;
width: 200px;
display: flex;
margin: 20px 5px;
display: flex;
    align-items: center;
    justify-content: center;
}
a:hover{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(24, 24, 24);
padding: 15px 20px;
text-decoration: none;
color: rgb(255, 255, 255);
font-weight: bolder;
border-radius: 10px;
}
    </style>
</head>
<body>
    <div id="health">

        <div class="logger">
            <center>
     <h1>Health Logger</h1>
     <h4>Developed by Sreekanth Reddy</h4>
     <a href="www">MANAGE PATIENTS</a>
     <a href="www">MANAGE VITALS</a>
            </center>
         </div>
    </div>
</body>
</html>


DoctorHomeVitals


<!DOCTYPE html>
<html>
<head>
    <title>Display Users</title>
    <style>
        table {
            width: 95.5%;
            border-collapse: collapse;
            margin: 50px 0;
            font-size: 18px;
            text-align: left;
 margin: 0 auto;
        }
        th, td {
            padding: 12px;
            width: auto;
            height: auto;
            border-bottom: 1px solid #ddd;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        }
        th {
            background-color: #f2f2f2;
        }
        .firstnav,.secondnav{
            height: 70px ;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .buttons{
            height: 70px ;
            width: 45%;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
        }
        h2,h3{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            margin-left: 30px;
            color: red;
        }
        .firstnav>a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 25px;
display: flex;
    align-items: center;
    justify-content: center;
}
.buttons>a{
    
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 10px;
display: flex;
    align-items: center;
    justify-content: center;
}

tr>.action>a{
    height: 20px;
    /* width: 250px; */
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 3px 0px;
text-decoration: none;
font-weight: bolder;
border-radius: 10px;
display: flex;
    align-items: center;
    justify-content: center; 

}
 
    </style>
</head>
<body>
<div class="firstnav">
    <h2>DOCTOR HOME PAGE</h2>
    <a href="www">LOGOUT</a>

</div>

<div class="secondnav">
    <h3>Vitals</h3>
<div class="buttons">
    <a href="www">Manage Patients</a>
    <a href="www">Expot</a>
    <a href="www">Record New Vital</a>
    <a href="www">Vital Alerts</a>
</div>
</div>
    <table>
        <thead>
            <tr>
                <th>Sr No</th>
                <th>Name</th>
                <th>Phone</th>
                <th>BP Low</th>
                <th>BP High</th>
                <th>SPO2</th>
                <th>Recorded On</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="user" items="${userList}">
                <tr>
                    <td>1</td>
                    <td>Sreekanth</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td> 
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td> 
                    
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td> 
                    
                </tr>
            </c:forEach>
        </tbody>
    </table>
</body>
</html>


DOCTOR HOME



<!DOCTYPE html>
<html>
<head>
    <title>Display Users</title>
    <style>
        table {
            width: 95.5%;
            border-collapse: collapse;
            margin: 50px 0;
            font-size: 18px;
            text-align: left;
 margin: 0 auto;
        }
        th, td {
            padding: 12px;
            width: auto;
            height: auto;
            border-bottom: 1px solid #ddd;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            font-size:15px ;
        }
        th {
            background-color: #f2f2f2;
        }

         tr>.actionmain{
            width: 190px;
            
        } 
        tr>.action{
            display: flex;
        }
        tr>.action>a{
             font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
margin: 0 5px;
padding: 5px 7px; 
text-decoration: none;
font-weight: bold;
border-radius: 5px;
display: flex;
align-items: center;
justify-content: center;

        }
        .firstnav,.secondnav{
            height: 70px ;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .buttons{
            height: 70px ;
            width: 50%;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
        }
        h2{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            margin-left:27px;
            color: red;
        }

        h3{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            /* margin-left: px; */
        }
        .firstnav>a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 25px;
display: flex;
    align-items: center;
    justify-content: center;
}
.buttons>a{
    
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 10px;
display: flex;
    align-items: center;
    justify-content: center;
}

 
    </style>
</head>
<body>
<div class="firstnav">
    <h2>DOCTOR HOME PAGE</h2>
    <a href="www">LOGOUT</a>

</div>

<div class="secondnav">
<div class="buttons">
    <h3>Patients[3]</h3>
    <a href="www">Search Patients</a>
    <a href="www">Add Patients</a>
    <a href="www">Manage Vitals</a>
</div>
</div>
    <table>
        <thead>
            <tr>
                <th>Sr N0</th>
                <th>Name-Age</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Diagnosis</th>
                <th>Remarks</th>
                <th>Gender</th>
                <th class="actionmain">Action</th>
               

                
            </tr>
        </thead>
        <tbody>
            <c:forEach var="user" items="${userList}">
                <tr>
                    <td>1</td>
                    <td>Sreekanth-23</td>
                    <td>Sree2727@gmail.com</td>
                    <td>9876543210</td>
                    <td>Blood Presure</td>
                    <td>Nothing to Worry</td>
                    <td>Male</td>
                    <td class="action" >
                        <a href="www" style="background-color: green; color:white">Manage Vitals</a>
                        <a href="www" style="background-color: Blue;color:white">Update</a>
                        <a href="www" style="background-color: red;color:white">Delete</a>

                    </td>
                    
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth-23</td>
                    <td>Sree2727@gmail.com</td>
                    <td>9876543210</td>
                    <td>Blood Presure</td>
                    <td>Nothing to Worry</td>
                    <td>Male</td>
                    <td class="action" >
                        <a href="www" style="background-color: green; color:white">Manage Vitals</a>
                        <a href="www" style="background-color: Blue;color:white">Update</a>
                        <a href="www" style="background-color: red;color:white">Delete</a>

                    </td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth Reddy-23</td>
                    <td>Sree2727@gmail.com</td>
                    <td>9876543210</td>
                    <td>Blood Presure</td>
                    <td>Nothing to Worry</td>
                    <td>Male</td>
                    <td class="action" >
                        <a href="www" style="background-color: green; color:white">Manage Vitals</a>
                        <a href="www" style="background-color: Blue;color:white">Update</a>
                        <a href="www" style="background-color: red;color:white">Delete</a>

                    </td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth-23</td>
                    <td>Sree2727@gmail.com</td>
                    <td>9876543210</td>
                    <td>Blood Presure</td>
                    <td>Nothing to Worry</td>
                    <td>Male</td>
                    <td class="action" >
                        <a href="www" style="background-color: green; color:white">Manage Vitals</a>
                        <a href="www" style="background-color: Blue;color:white">Update</a>
                        <a href="www" style="background-color: red;color:white">Delete</a>

                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
</body>
</html>



Vitals


<!DOCTYPE html>
<html>
<head>
    <title>Display Users</title>
    <style>
        table {
            width: 95.5%;
            border-collapse: collapse;
            margin: 50px 0;
            font-size: 18px;
            text-align: left;
 margin: 0 auto;
        }
        th, td {
            padding: 12px;
            width: auto;
            height: auto;
            border-bottom: 1px solid #ddd;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        }
        th {
            background-color: #f2f2f2;
        }
        .firstnav,.secondnav{
            height: 70px ;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .buttons{
            height: 70px ;
            width: 35%;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
        }
        h2,h3{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            margin-left: 30px;
            color: red;
        }
        .firstnav>a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 25px;
display: flex;
    align-items: center;
    justify-content: center;
}
.buttons>a{
    
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 10px;
display: flex;
    align-items: center;
    justify-content: center;
}

tr>.action{
    /* padding: 5px 0px; */
}
tr>.action>a{
    height: 20px;
    /* width: 250px; */
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 3px 0px;
text-decoration: none;
font-weight: bolder;
border-radius: 10px;
display: flex;
    align-items: center;
    justify-content: center; 

}


 
    </style>
</head>
<body>
<div class="firstnav">
    <h2>Vital Alerts</h2>
    <a href="www">LOGOUT</a>

</div>

<div class="secondnav">
    <h3>Vitals</h3>
<div class="buttons">
    <a href="www">Manage Patients</a>
    <a href="www">Expot</a>
    <a href="www">Record New Vital</a>
</div>
</div>
    <table>
        <thead>
            <tr>
                <th>Sr No</th>
                <th>Name</th>
                <th>Phone</th>
                <th>BP Low</th>
                <th>BP High</th>
                <th>SPO2</th>
                <th>Recorded On</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="user" items="${userList}">
                <tr>
                    <td>1</td>
                    <td>Sreekanth</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td>                
                  </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth Reddy</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td>                    
                </tr>
                <tr>
                    <td>1</td>
                    <td>Sreekanth</td>
                    <td>9876543210</td>
                    <td>70</td>
                    <td>90</td>
                    <td>130</td>
                    <td>12-09-2020 02:00 PM</td>
                    <td class="action" >
                        <a href="www" style="background-color: red;color:white">Delete</a>
                    </td>                   
                </tr>
            </c:forEach>
        </tbody>
    </table>
</body>
</html>
_-----------------------------------------------------------------------


package minithree;

import java.security.Timestamp;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class PatientsDao {
	List<Patient> patients = new ArrayList();
	Connection con = null;
	PreparedStatement pt = null;
	public void toSavePatient(String name, String phone, String age, String gender, String diagnosis, String remarks) {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthdb", "root", "J2EE@java");
			pt = con.prepareStatement(
					"insert into patients(name,phone,age,gender,diagnosis,remarks) values (?,?,?,?,?,?)");
			pt.setString(1, name);
			pt.setString(2, phone);
			pt.setInt(3, Integer.parseInt(age));
			pt.setString(4, gender);
			pt.setString(5, diagnosis);
			pt.setString(6, diagnosis);
			pt.execute();
			System.out.println("Row Inserted");
		} catch (SQLException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	public List<Patient> listOfPatients() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthdb", "root", "J2EE@java");
			pt = con.prepareStatement("select * from patients");
			ResultSet set = pt.executeQuery();
			while (set.next()) {
				Patient patient = new Patient();
				patient.setId(set.getInt(1));
				patient.setName(set.getString(2));
				patient.setPhone(set.getString(3));
				patient.setAge(set.getInt(4));
				patient.setGender(set.getString(5));
				patient.setDiagnosis(set.getString(6));
				patient.setRemarks(set.getString(7));
				patients.add(patient);
			}
			return patients;
		} catch (SQLException | ClassNotFoundException e) {
			e.printStackTrace();
		}
		return null;
	}

	public List<Patient> listOfSearchPatients(String search) {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthdb", "root", "J2EE@java");
			pt = con.prepareStatement("SELECT * FROM patients WHERE name LIKE ?");
			pt.setString(1, search);
			ResultSet set = pt.executeQuery();
			while (set.next()) {
				Patient patient = new Patient();
				patient.setId(set.getInt(1));
				patient.setName(set.getString(2));
				patient.setPhone(set.getString(3));
				patient.setAge(set.getInt(4));
				patient.setGender(set.getString(5));
				patient.setDiagnosis(set.getString(6));
				patient.setRemarks(set.getString(7));
				patients.add(patient);
//				System.out.println(patient);
			}
			return patients;
		} catch (SQLException | ClassNotFoundException e) {
			e.printStackTrace();
		}
		return null;
	}

	public void toAddPatientVitals(String name, String phone, int bpLow, int bpHigh, int spo2) {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthdb", "root", "J2EE@java");
			String sql = "INSERT INTO patientvitals (name, phone, bpLow, bpHigh, spo2) VALUES (?, ?, ?, ?, ?)";
			pt = con.prepareStatement(sql);
			pt.setString(1, name);
			pt.setString(2, phone);
			pt.setInt(3, bpLow);
			pt.setInt(4, bpHigh);
			pt.setInt(5, spo2);
			pt.executeUpdate();
			System.out.println("Row Inserted");
		} catch (SQLException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	public void filterVitalPatients() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/healthdb", "root", "J2EE@java");
			pt = con.prepareStatement(
					"SELECT *FROM patientvitals  WHERE bpLow NOT BETWEEN 70 AND 90 OR bpHigh NOT BETWEEN 120 AND 150 OR spo2 NOT BETWEEN 95 AND 100");
			ResultSet set = pt.executeQuery();
			if (set.next())
				System.out.println("Vital are came");
		} catch (SQLException | ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
}




package minithree;

import java.io.IOException;
import java.security.Timestamp;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class PatientsController extends HttpServlet {
   
	
	
@Override
protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	String name=req.getParameter("name");
	String phone=req.getParameter("phone");
	String age=req.getParameter("age");
	String gender=req.getParameter("gender");
	String diagnosis=req.getParameter("diagnosis");
	String remarks=req.getParameter("remarks");
//	dao.toSavePatient(name,phone,age,gender,diagnosis,remarks);
	}

public static void main(String[] args) {
	PatientsDao dao=new PatientsDao();
//	dao.toSavePatient("Sreekanth","8765432","23","Male","BloodPresure","Nothing");
//	System.out.println(dao.listOfPatients());
//	System.out.println(dao.listOfSearchPatients("Sree%"));
//	dao.toAddPatientVitals("Sreekanth", "8765432", 80, 130, 96);
	dao.filterVitalPatients();
}
}



package minithree;
public class Patient {
    private int id;
    private String name;
    private String phone;
    private int age;
    private String gender;
    private String diagnosis;
    private String remarks;

    // Constructor
    

    public Patient() {
		// TODO Auto-generated constructor stub
	}

	@Override
	public String toString() {
		return "Patient [id=" + id + ", name=" + name + ", phone=" + phone + ", age=" + age + ", gender=" + gender
				+ ", diagnosis=" + diagnosis + ", remarks=" + remarks + "]";
	}

	// Getters and Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getDiagnosis() {
        return diagnosis;
    }

    public void setDiagnosis(String diagnosis) {
        this.diagnosis = diagnosis;
    }

    public String getRemarks() {
        return remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

	public Patient(int id, String name, String phone, int age, String gender, String diagnosis, String remarks) {
		this.id = id;
		this.name = name;
		this.phone = phone;
		this.age = age;
		this.gender = gender;
		this.diagnosis = diagnosis;
		this.remarks = remarks;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

    
}





--------------------------------------------------------------------------------------------------------------------------------------


<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<title>Registration</title>
<style>
 
#patientinformation
{
    border: 3px solid rgb(53, 53, 53);
    height: 100%;
    width: 400px;
    margin: 50px auto;
}
 
 
.PatientInfo{
    height: 70px;
    width: 300px;
    margin-bottom: 10px;
    margin-left: 30px;
}
 

label{
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
input
{
    height: 25px;
    width: 300px;
}
 
textarea{
    height: 75px;
    width: 300px;
}
 
#GenderRadio
{
    height: 15px;
    width: 12px;
}
 
 
  .button {
  color: rgb(0, 0, 0);
  padding: 16px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  font-weight: bolder;
  margin: 10px 0px;
  cursor: pointer;
  margin-left: 30px;
  border:2px solid rgb(2, 2, 2);
  border-radius: 13px;
  }
 
.button:hover{
    background-color: rgb(0, 0, 0);
    color: white;

}
h1,h4{
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
    color: brown;
}

</style>
<body>
<div id="patientinformation">
<center>
    <h1 >Health Logger</h1>
<h4 >Add/Update Patient Information</h4>
</center>
<form action="" method="">
    <div class="PatientInfo">
        <label for="Name">Name</label>
        <br>
        <input type="text" id="Name" >
    </div>
    <div class="PatientInfo">
        <label for="Email">Email</label>
        <br>
        <input type="text" id="Email">
    </div>
    <div class="PatientInfo">
        <label for="Phone">Phone</label>
        <br>
        <input type="text" id="Phone">
    </div>
    <div class="PatientInfo">
        <label for="Age">Age</label>
        <br>
        <input type="text" id="Age">
    </div>
    <div class="PatientInfo">
        <label for="Diagnosis">Diagnosis</label>
        <br>
        <input type="text" id="Diagnosis">
    </div>
    <div class="PatientInfo">
        <label for="Remarks">Remarks</label>
        <br>
        <textarea name="Remarks" id=""></textarea>
    </div>
    <br>
    <br>
    <br>
    <div class="PatientInfo">
        <label for="GenderRadio"> Gender</label>
        <br>
        <input type="radio" name="Gender" id="GenderRadio">Male
        <br>
        <input type="radio" name="Gender" id="GenderRadio">female
    </div>
    <center><button class="button">SUBMIT</button></center>
</div>
</form>
</body>
</html>
    +==================================================

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@page import="minithree.PatientsDao"%>
<%@page import="minithree.Patient"%>
<%@page import="java.util.List"%>
<%
PatientsDao dao=new PatientsDao();
List<Patient> pt=dao.listOfPatients();
%>
<!DOCTYPE html>
<html>
<head>
    <title>Display Users</title>
    <style>
        table {
            width: 95.5%;
            border-collapse: collapse;
            margin: 50px 0;
            font-size: 18px;
            text-align: left;
 margin: 0 auto;
        }
        th, td {
            padding: 12px;
            width: auto;
            height: auto;
            border-bottom: 1px solid #ddd;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            font-size:15px ;
        }
        th {
            background-color: #f2f2f2;
        }

         tr>.actionmain{
            width: 190px;
        } 
        tr>.action{
            display: flex;
        }
        tr>.action>a{
             font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
margin: 0 5px;
padding: 5px 7px; 
text-decoration: none;
font-weight: bold;
border-radius: 5px;
display: flex;
align-items: center;
justify-content: center;

        }
        .firstnav,.secondnav{
            height: 70px ;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        .buttons{
            height: 70px ;
            width: 50%;
            display: flex;
            align-items: center;
            justify-content: space-evenly;
        }
        h2{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            margin-left:27px;
            color: red;
        }

        h3{
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            /* margin-left: px; */
        }
        .firstnav>a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 25px;
display: flex;
    align-items: center;
    justify-content: center;
}
.buttons>a{
    
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 5px 10px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
margin-right: 10px;
display: flex;
    align-items: center;
    justify-content: center;
}

 
    </style>
</head>
<body>
<div class="firstnav">
    <h2>DOCTOR HOME PAGE</h2>
    <a href="www">LOGOUT</a>

</div>

<div class="secondnav">
<div class="buttons">
   <h3>Patients[<%= pt.size() %>]</h3>

    <a href="www">Search Patients</a>
    <a href="RegistrationForm.jsp">Add Patients</a>
    <a href="www">Manage Vitals</a>
</div>
</div>
    <table>
        <thead>
            <tr>
                <th>Sr N0</th>
                <th>Name-Age</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Diagnosis</th>
                <th>Remarks</th>
                <th>Gender</th>
                <th class="actionmain">Action</th>
               

                
            </tr>
        </thead>
        <tbody>
            <%
    for (Patient p : pt) {
%>
    <tr>
        <td><%= p.getId() %></td>
        <td><%= p.getName() %></td>
         <td><%= p.getName() %></td>
        <td><%= p.getPhone() %></td>
         <td><%= p.getRemarks()%></td>
        <td><%= p.getRemarks()%></td>
        <td><%= p.getGender() %></td>
        <td class="action">
            <a href="" style="background-color: green; color: white">Manage Vitals</a>
            <a href="www" style="background-color: blue; color: white">Update</a>
            <a href="www" style="background-color: red; color: white">Delete</a>
        </td>
    </tr>
<%
    }
%>

              
        </tbody>
    </table>
</body>
</html>

+========================================================================================================
<%@page import="minithree.PatientsDao"%>
<%@page import="minithree.Patient"%>
<%@page import="java.util.List"%>




<%
PatientsDao dao=new PatientsDao();
dao.listOfPatients();
System.out.println("Executed");

List<Patient> pt=dao.listOfPatients();
%>
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Document</title>
    <script type="text/javascript">
    
    
    
    </script>
    <style>
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

#health{
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.logger{
    height: 200px;
    width: 350px;
    border: 3px solid red;
    border-radius: 10px;
    
}
h1{
margin: 15px 0;
font-weight: 100px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
h4{
    color: rgb(93, 93, 93);
margin-bottom: 60px;
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}
a{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(218, 218, 218);
padding: 15px 20px;
text-decoration: none;
color: rgb(0, 0, 0);
font-weight: bolder;
border-radius: 10px;
}
a:hover{
font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
background-color: rgb(24, 24, 24);
padding: 15px 20px;
text-decoration: none;
color: rgb(255, 255, 255);
font-weight: bolder;
border-radius: 10px;
}
</style>
</head>
<body>
    <div id="health">
        <div class="logger">
            <center>
     <h1>Health Logger</h1>
     <h4>Developed by Sreekanth Reddy</h4>
     <a href="LoginForm.jsp">DOCTOR LOGIN</a>
            </center>
         </div>
     
    </div>
</body>
</html>
==================================================================================
package minithree;

import java.io.IOException;
import java.security.Timestamp;
import java.util.ArrayList;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet("/RegistrationForm.jsp")
public class PatientsController extends HttpServlet {
	
	
	@Override
		protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		String name = req.getParameter("name");
		String phone = req.getParameter("phone");
		String age = req.getParameter("age");
		String gender = req.getParameter("gender");
		String diagnosis = req.getParameter("diagnosis");
		String remarks = req.getParameter("remarks");
//	dao.toSavePatient(name,phone,age,gender,diagnosis,remarks);
		System.out.println(name+phone+age+gender+diagnosis+remarks);
		}
//	@Override
//	protected void (HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
//		String name = req.getParameter("name");
//		String phone = req.getParameter("phone");
//		String age = req.getParameter("age");
//		String gender = req.getParameter("gender");
//		String diagnosis = req.getParameter("diagnosis");
//		String remarks = req.getParameter("remarks");
////	dao.toSavePatient(name,phone,age,gender,diagnosis,remarks);
//		System.out.println(name+phone+age+gender+diagnosis+remarks);
//	}

	public static void main(String[] args) {
		PatientsDao dao = new PatientsDao();
//		dao.toSavePatient("Sridevi Vaddemani", "9876543210", "27", "Male", "Fever", "Nothing");
//	System.out.println(dao.listOfPatients());
//	System.out.println(dao.listOfSearchPatients("Sree%"));
//	dao.toAddPatientVitals("Sreekanth", "8765432", 80, 130, 96);
		dao.filterVitalPatients();
	}
}
